[build-system]
requires = [
  "hatchling",
  "hatch-vcs",         # For version interpolation from tags/commit hashes
  "nipreps-versions",  # For the nipreps-calver scheme
]
build-backend = "hatchling.build"

[project]
name = "PROJECT"
dynamic = ["version"] description = "PROJECT_DESCRIPTION"
readme = "README.md"
authors = [{name = "The NiPreps Developers", email = "nipreps@gmail.com"}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]
license = {file = "LICENSE"}
requires-python = ">=3.10"  # SPEC0, consider pre-EOL for libraries
dependencies = [
  # Backports, remove if unused
  "tomli; python_version < '3.11'",
  "importlib_resources >=5.12; python_version < '3.12'",
  "importlib_metadata >=6.5; python_version < '3.12'",
  # SPEC0, remove if otherwise not in dependency graph
  "numpy >=1.23",
  "scipy >=1.9",
  "matplotlib >=3.6",
  "pandas >=1.5",
  "scikit-image >=0.20",
  "networkx >=2.7",
  "scikit-learn >=1.1",
  # Common nipreps stack following 2 year minor series support
  "nibabel >=4.0",
  "nipype >=1.8",
  "pybids >= 0.15",
]

[project.urls]
Homepage = "https://github.com/nipreps/PROJECT"
Documentation = "https://PROJECT.readthedocs.io"
# Paper = "https://doi.org/DOI"
# "Docker Images" = "https://hub.docker.com/r/nipreps/PROJECT/tags/"

# Nipreps general
NiPreps = "https://www.nipreps.org/"

[project.optional-dependencies]
test = [
  "pytest >=6",
  "pytest-cov",
  "pytest-env",
]
container = [
  # Include any dependencies that should be installed into a container
]

[project.scripts]



#
# Hatch configurations
#

[tool.hatch.metadata]
allow-direct-references = true  # Enables dependency to use "package @ URL"

[tool.hatch.build.targets.sdist]
exclude = [".git_archival.txt"]  # No longer needed in sdist

[tool.hatch.build.targets.wheel]
packages = ["PROJECT"]
exclude = [
    "PROJECT/data/tests/work",  # Large test data directory
]

##  The following two sections configure setuptools_scm in the hatch way

[tool.hatch.version]
source = "vcs"
raw-options = { version_scheme = "nipreps-calver" }

[tool.hatch.build.hooks.vcs]
version-file = "PROJECT/_version.py"


#
# Developer tool configurations
#

# Recommended configurations are provided for style checkers/formatters,
# but the tools are disabled to prevent contributors' tools from modifying
# without following local guidelines.
# To adopt a convention, remove the DISABLE line.
# Note that ruff is configured in ruff.toml

[tool.black]
exclude = ".*"  # DISABLE
line-length = 99
skip-string-normalization = true

[tool.isort]
skip_glob = ["**/*.py"]  # DISABLE
profile = 'black'

[tool.flake8]
exclude = ['.*', '*']  # DISABLE
