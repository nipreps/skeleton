name: tests

on:
  push:
    branches:
      - main
      - master
      - maint/*
    tags:
      - '*'
  pull_request:
    branches:
      - main
      - master
      - maint/*
  schedule:
    # 8am EST / 9am EDT Mondays
    - cron: '0 13 * * 1'
  workflow_dispatch:

defaults:
  run:
    shell: bash -el {0}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  FORCE_COLOR: 1

  # Ensure tests can sense settings about the environment
  TOX_OVERRIDE: >-
    testenv.pass_env+=GITHUB_*,FORCE_COLOR

jobs:
  build:
    name: Build & verify package
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: hynek/build-and-inspect-python-package@v2
        with:
          attest-build-provenance-github: ${{ github.event_name != 'pull_request' }}

  test:
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        python:
        # SPEC0+
        - '3.10'
        - '3.11'
        # /SPEC0+
        # SPEC0
        - '3.12'
        - '3.13'
        - '3.14'
        depencencies: ['latest']
        include:
          - os: ubuntu-latest
            python-version: '3.10'  # or '3.12'  # (SPEC0)
            dependencies: 'min'
    runs-on: ${{ matrix.os }}
    env:
      DEPENDS: ${{ matrix.dependencies }}
      # For use with pytest -m
      MARKS: ${{ matrix.marks }}
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
      - name: Install tox
        run: uv tool install tox --with=tox-uv --with=tox-gh-actions
      - name: Show tox config
        run: tox c
      - name: Setup test suite
        run: tox run -vv --notest --skip-missing-interpreters false
      - name: Run tox
        run: tox --skip-pkg-install --exit-and-dump-after 1200
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ always() }}

  publish:
    name: Publish released package to pypi.org
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [build, test]
    permissions:
      attestations: write
      id-token: write

    steps:
      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v5
        with:
          name: Packages
          path: dist

      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  checks:
    name: Contribution checks
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        check: ['style', 'spellcheck', 'typecheck']

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v7
      - name: Install tox
        run: uv tool install tox --with=tox-uv
      - name: Show tox config
        run: tox c -e ${{ matrix.check }}
      - name: Run check
        run: tox -e ${{ matrix.check }}
